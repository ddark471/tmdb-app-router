{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satoshi_khd\\\\Desktop\\\\tmdb-app-router\\\\src\\\\components\\\\LanguageSwitcher\\\\LanguageInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styles from \"./LanguageSwitcher.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageInterface = ({\n  handleOnMouseEnter,\n  handleOnMouseLeave,\n  handleClick,\n  isActive\n}) => {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.languageContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.languageSwitcher} ${isActive ? styles.switchModifier : \"\"}`,\n      onMouseEnter: handleOnMouseEnter,\n      onMouseLeave: handleOnMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.currentLang,\n        children: i18n.language.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.langDropdown,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.language,\n          onClick: () => handleClick(i18n.language == \"en\" ? \"ru\" : \"en\"),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.languageText,\n            onClick: () => handleClick(i18n.language == \"en\" ? \"ru\" : \"en\"),\n            children: i18n.language == \"en\" ? \"ru\" : \"en\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageInterface, \"iD7vDB/EPQWin5ATG71yacngHuk=\", false, function () {\n  return [useTranslation];\n});\n_c = LanguageInterface;\nexport default LanguageInterface;\nvar _c;\n$RefreshReg$(_c, \"LanguageInterface\");","map":{"version":3,"names":["React","useState","useTranslation","styles","jsxDEV","_jsxDEV","LanguageInterface","handleOnMouseEnter","handleOnMouseLeave","handleClick","isActive","_s","i18n","className","languageContainer","children","languageSwitcher","switchModifier","onMouseEnter","onMouseLeave","currentLang","language","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","langDropdown","onClick","languageText","_c","$RefreshReg$"],"sources":["C:/Users/satoshi_khd/Desktop/tmdb-app-router/src/components/LanguageSwitcher/LanguageInterface.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styles from \"./LanguageSwitcher.module.css\";\n\nconst LanguageInterface = ({\n  handleOnMouseEnter,\n  handleOnMouseLeave,\n  handleClick,\n  isActive,\n}) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <div className={styles.languageContainer}>\n      <div\n        className={`${styles.languageSwitcher} ${\n          isActive ? styles.switchModifier : \"\"\n        }`}\n        onMouseEnter={handleOnMouseEnter}\n        onMouseLeave={handleOnMouseLeave}\n      >\n        <span className={styles.currentLang}>\n          {i18n.language.toUpperCase()}\n        </span>\n        {isActive && (\n          <div className={styles.langDropdown}>\n            <div\n              className={styles.language}\n              onClick={() => handleClick(i18n.language == \"en\" ? \"ru\" : \"en\")}\n            >\n              <span\n                className={styles.languageText}\n                onClick={() => handleClick(i18n.language == \"en\" ? \"ru\" : \"en\")}\n              >\n                {i18n.language == \"en\" ? \"ru\" : \"en\"}\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default LanguageInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,kBAAkB;EAClBC,kBAAkB;EAClBC,WAAW;EACXC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM;IAAEC;EAAK,CAAC,GAAGV,cAAc,CAAC,CAAC;EAEjC,oBACEG,OAAA;IAAKQ,SAAS,EAAEV,MAAM,CAACW,iBAAkB;IAAAC,QAAA,eACvCV,OAAA;MACEQ,SAAS,EAAG,GAAEV,MAAM,CAACa,gBAAiB,IACpCN,QAAQ,GAAGP,MAAM,CAACc,cAAc,GAAG,EACpC,EAAE;MACHC,YAAY,EAAEX,kBAAmB;MACjCY,YAAY,EAAEX,kBAAmB;MAAAO,QAAA,gBAEjCV,OAAA;QAAMQ,SAAS,EAAEV,MAAM,CAACiB,WAAY;QAAAL,QAAA,EACjCH,IAAI,CAACS,QAAQ,CAACC,WAAW,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,EACNhB,QAAQ,iBACPL,OAAA;QAAKQ,SAAS,EAAEV,MAAM,CAACwB,YAAa;QAAAZ,QAAA,eAClCV,OAAA;UACEQ,SAAS,EAAEV,MAAM,CAACkB,QAAS;UAC3BO,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACG,IAAI,CAACS,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAE;UAAAN,QAAA,eAEhEV,OAAA;YACEQ,SAAS,EAAEV,MAAM,CAAC0B,YAAa;YAC/BD,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACG,IAAI,CAACS,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAE;YAAAN,QAAA,EAE/DH,IAAI,CAACS,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAtCIL,iBAAiB;EAAA,QAMJJ,cAAc;AAAA;AAAA4B,EAAA,GAN3BxB,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}