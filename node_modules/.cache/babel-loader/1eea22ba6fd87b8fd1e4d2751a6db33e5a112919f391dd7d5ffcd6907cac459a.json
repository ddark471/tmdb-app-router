{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satoshi_khd\\\\Desktop\\\\tmdb-app-router\\\\src\\\\components\\\\pages\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useSearchParams, useParams } from \"react-router-dom\";\nimport { service } from \"../../../api/service\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Rating from \"../../Rating/Rating\";\nimport Image from \"../../Image/Image\";\nimport Genres from \"../../Genres/Genres\";\nimport PostersTemplate from \"../../PostersTemplate/PostersTemplate\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport styles from \"./Movies.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  let totalPages;\n  const navigate = useNavigate();\n  const {\n    page\n  } = useParams();\n  useEffect(() => {\n    service(`https://api.themoviedb.org/3/movie/popular?language=${t(\"api-code\")}&page=${~~page + 1}`, \"GET\").then(({\n      data\n    }) => {\n      console.log(data);\n      setMoviesData(data.results); //data.results equal to 20, then content per page will be 20;\n      setTotalResults(data.total_results);\n      totalPages = data.total_pages;\n    });\n  }, [i18n.language, page, navigate]);\n  const handleBackPage = () => {\n    if (~~page > 1) navigate(`/page/${~~page - 1}`);\n  };\n  const handleNextPage = () => {\n    console.log(~~page);\n    navigate(`/page/${~~page + 1}`);\n  };\n  // if (currPage < totalPages) setCurrPage(currPage + 1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.moviesContainer,\n      children: moviesData.map(movies => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movies,\n        children: /*#__PURE__*/_jsxDEV(PostersTemplate, {\n          postersData: movies,\n          type: \"moviePosters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, movies.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), totalResults > moviesData.length ? /*#__PURE__*/_jsxDEV(Pagination, {\n      handleBackPage: handleBackPage,\n      handleNextPage: handleNextPage,\n      page: ~~page + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(Movies, \"aiXW+P4pd7GMcZeK1rk6iJAisSA=\", false, function () {\n  return [useTranslation, useNavigate, useParams];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","useSearchParams","useParams","service","Link","useTranslation","Rating","Image","Genres","PostersTemplate","Pagination","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","moviesData","setMoviesData","totalResults","setTotalResults","t","i18n","totalPages","navigate","page","then","data","console","log","results","total_results","total_pages","language","handleBackPage","handleNextPage","children","className","moviesContainer","map","movies","postersData","type","fileName","_jsxFileName","lineNumber","columnNumber","id","length","_c","$RefreshReg$"],"sources":["C:/Users/satoshi_khd/Desktop/tmdb-app-router/src/components/pages/Movies/Movies.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useSearchParams, useParams } from \"react-router-dom\";\nimport { service } from \"../../../api/service\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Rating from \"../../Rating/Rating\";\nimport Image from \"../../Image/Image\";\nimport Genres from \"../../Genres/Genres\";\nimport PostersTemplate from \"../../PostersTemplate/PostersTemplate\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport styles from \"./Movies.module.css\";\n\nconst Movies = () => {\n  const [moviesData, setMoviesData] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const { t, i18n } = useTranslation();\n  let totalPages;\n  const navigate = useNavigate();\n  const { page } = useParams();\n\n  useEffect(() => {\n    service(\n      `https://api.themoviedb.org/3/movie/popular?language=${t(\n        \"api-code\"\n      )}&page=${~~page + 1}`,\n      \"GET\"\n    ).then(({ data }) => {\n      console.log(data);\n      setMoviesData(data.results); //data.results equal to 20, then content per page will be 20;\n      setTotalResults(data.total_results);\n      totalPages = data.total_pages;\n    });\n  }, [i18n.language, page, navigate]);\n\n  const handleBackPage = () => {\n    if (~~page > 1) navigate(`/page/${~~page - 1}`);\n  };\n\n  const handleNextPage = () => {\n    console.log(~~page);\n    navigate(`/page/${~~page + 1}`);\n  };\n  // if (currPage < totalPages) setCurrPage(currPage + 1);\n\n  return (\n    <>\n      <div className={styles.moviesContainer}>\n        {moviesData.map((movies) => (\n          <div className={styles.movies} key={movies.id}>\n            <PostersTemplate postersData={movies} type={\"moviePosters\"} />\n          </div>\n        ))}\n      </div>\n      {totalResults > moviesData.length ? (\n        <Pagination\n          handleBackPage={handleBackPage}\n          handleNextPage={handleNextPage}\n          page={~~page + 1}\n        />\n      ) : null}\n    </>\n  );\n};\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}