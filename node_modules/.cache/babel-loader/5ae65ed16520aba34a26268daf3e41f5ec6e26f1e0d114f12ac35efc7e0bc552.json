{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satoshi_khd\\\\Desktop\\\\tmdb-app-router\\\\src\\\\components\\\\pages\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { service } from \"../../../api/service\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Rating from \"../../Rating/Rating\";\nimport Image from \"../../Image/Image\";\nimport Genres from \"../../Genres/Genres\";\nimport PostersTemplate from \"../../PostersTemplate/PostersTemplate\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport styles from \"./Movies.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const [searchParams] = useSearchParams();\n  const [currPage, setCurrPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  let totalPages;\n  const navigate = useNavigate();\n  useEffect(() => {\n    service(`https://api.themoviedb.org/3/movie/popular?language=${t(\"api-code\")}&page=${currPage}`, \"GET\").then(({\n      data\n    }) => {\n      console.log(data);\n      setMoviesData(data.results); //data.results equal to 20, then content per page will be 20;\n      setTotalResults(data.total_results);\n      totalPages = data.total_pages;\n    });\n  }, [i18n.language, currPage, navigate]);\n  console.log(moviesData.length);\n  const handleBackPage = () => {\n    if (currPage > 1) setCurrPage(currPage - 1);\n  };\n  const handleNextPage = () => {\n    console.log(totalPages);\n  };\n  // if (currPage < totalPages) setCurrPage(currPage + 1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.moviesContainer,\n      children: moviesData.map(movies => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movies,\n        children: /*#__PURE__*/_jsxDEV(PostersTemplate, {\n          postersData: movies,\n          type: \"moviePosters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, movies.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), totalResults > moviesData.length ? /*#__PURE__*/_jsxDEV(Pagination, {\n      handleBackPage: handleBackPage,\n      handleNextPage: handleNextPage,\n      currPage: currPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 48\n    }, this) : null]\n  }, void 0, true);\n};\n_s(Movies, \"4A7s+CMDbSQnrCN5CawU5v/jDeU=\", false, function () {\n  return [useSearchParams, useTranslation, useNavigate];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","useSearchParams","service","Link","useTranslation","Rating","Image","Genres","PostersTemplate","Pagination","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","moviesData","setMoviesData","searchParams","currPage","setCurrPage","totalResults","setTotalResults","t","i18n","totalPages","navigate","then","data","console","log","results","total_results","total_pages","language","length","handleBackPage","handleNextPage","children","className","moviesContainer","map","movies","postersData","type","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/satoshi_khd/Desktop/tmdb-app-router/src/components/pages/Movies/Movies.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { service } from \"../../../api/service\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Rating from \"../../Rating/Rating\"\nimport Image from \"../../Image/Image\";\nimport Genres from \"../../Genres/Genres\";\nimport PostersTemplate from \"../../PostersTemplate/PostersTemplate\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport styles from \"./Movies.module.css\"\n\nconst Movies = () => {\n    const [moviesData, setMoviesData] = useState([]);\n    const [searchParams] = useSearchParams();\n    const [currPage, setCurrPage] = useState(1);\n    const [totalResults, setTotalResults] = useState(0);\n    const { t, i18n } = useTranslation();\n    let totalPages;\n    const navigate = useNavigate();\n    \n\n    useEffect(() => {\n        service(`https://api.themoviedb.org/3/movie/popular?language=${t(\"api-code\")}&page=${currPage}`,\"GET\").then(({data}) => {\n          console.log(data)\n          setMoviesData(data.results); //data.results equal to 20, then content per page will be 20;\n          setTotalResults(data.total_results)\n          totalPages = data.total_pages;});\n      }, [ i18n.language, currPage , navigate])\n\n      console.log(moviesData.length)\n\n      const handleBackPage = () => {\n        if (currPage > 1) setCurrPage(currPage - 1);}\n\n      const handleNextPage = () => { console.log(totalPages)}\n        // if (currPage < totalPages) setCurrPage(currPage + 1);\n\n      return (\n        <>\n          <div className={styles.moviesContainer}>\n              {moviesData.map((movies) => <div className={styles.movies} key={movies.id}>\n                <PostersTemplate postersData={movies} type={\"moviePosters\"}/>\n                </div>)}\n          </div>\n          {totalResults > moviesData.length ? (<Pagination handleBackPage={handleBackPage} handleNextPage={handleNextPage} currPage={currPage} />) : null}\n        </>)}\nexport default Movies"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}