{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satoshi_khd\\\\Desktop\\\\tmdb-app-router\\\\src\\\\components\\\\ActorCredits\\\\ActorCredits.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { service } from \"../../api/service\";\nimport PostersTemplate from \"../PostersTemplate/PostersTemplate\";\nimport { useTranslation } from \"react-i18next\";\nimport styles from \"./ActorCredits.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorCredits = ({\n  person_id\n}) => {\n  _s();\n  const [actorCredits, setActorCredits] = useState([]);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    data\n  } = useQuery({\n    queryKey: [\"ActorCredits\"],\n    queryFn: async () => {\n      const {\n        data,\n        isError,\n        error\n      } = await service(`https://api.themoviedb.org/3/person/${person_id}/movie_credits?language=${t(\"api-code\")}`, \"GET\");\n      return data;\n    }\n  });\n  console.log(data);\n  useEffect(() => {\n    // .then((item) => setActorCredits(item.data.cast));\n  }, [person_id, i18n.language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.ActorCredits,\n    children: data.isSuccess ? data.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PostersTemplate, {\n        postersData: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)) : error.toString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ActorCredits, \"UMN7Do1rCX4lu3wOOdvuP4oO0NE=\", false, function () {\n  return [useTranslation, useQuery];\n});\n_c = ActorCredits;\nexport default ActorCredits;\nvar _c;\n$RefreshReg$(_c, \"ActorCredits\");","map":{"version":3,"names":["React","useState","useEffect","useQuery","service","PostersTemplate","useTranslation","styles","jsxDEV","_jsxDEV","ActorCredits","person_id","_s","actorCredits","setActorCredits","t","i18n","data","queryKey","queryFn","isError","error","console","log","language","className","children","isSuccess","map","movie","postersData","fileName","_jsxFileName","lineNumber","columnNumber","id","toString","_c","$RefreshReg$"],"sources":["C:/Users/satoshi_khd/Desktop/tmdb-app-router/src/components/ActorCredits/ActorCredits.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { service } from \"../../api/service\";\nimport PostersTemplate from \"../PostersTemplate/PostersTemplate\";\nimport { useTranslation } from \"react-i18next\";\nimport styles from \"./ActorCredits.module.css\";\n\nconst ActorCredits = ({ person_id }) => {\n  const [actorCredits, setActorCredits] = useState([]);\n  const { t, i18n } = useTranslation();\n\n  const { data } = useQuery({\n    queryKey: [\"ActorCredits\"],\n    queryFn: async () => {\n      const { data, isError, error } = await service(\n        `https://api.themoviedb.org/3/person/${person_id}/movie_credits?language=${t(\n          \"api-code\"\n        )}`,\n        \"GET\"\n      );\n      return data;\n    },\n  });\n\n  console.log(data);\n\n  useEffect(() => {\n    // .then((item) => setActorCredits(item.data.cast));\n  }, [person_id, i18n.language]);\n\n  return (\n    <div className={styles.ActorCredits}>\n      {data.isSuccess\n        ? data.map((movie) => (\n            <div key={movie.id}>\n              <PostersTemplate postersData={movie} />\n            </div>\n          ))\n        : error.toString()}\n    </div>\n  );\n};\n\nexport default ActorCredits;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,OAAOC,eAAe,MAAM,oCAAoC;AAChE,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,MAAM,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEc,CAAC;IAAEC;EAAK,CAAC,GAAGV,cAAc,CAAC,CAAC;EAEpC,MAAM;IAAEW;EAAK,CAAC,GAAGd,QAAQ,CAAC;IACxBe,QAAQ,EAAE,CAAC,cAAc,CAAC;IAC1BC,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAM;QAAEF,IAAI;QAAEG,OAAO;QAAEC;MAAM,CAAC,GAAG,MAAMjB,OAAO,CAC3C,uCAAsCO,SAAU,2BAA0BI,CAAC,CAC1E,UACF,CAAE,EAAC,EACH,KACF,CAAC;MACD,OAAOE,IAAI;IACb;EACF,CAAC,CAAC;EAEFK,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EAEjBf,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,CAACS,SAAS,EAAEK,IAAI,CAACQ,QAAQ,CAAC,CAAC;EAE9B,oBACEf,OAAA;IAAKgB,SAAS,EAAElB,MAAM,CAACG,YAAa;IAAAgB,QAAA,EACjCT,IAAI,CAACU,SAAS,GACXV,IAAI,CAACW,GAAG,CAAEC,KAAK,iBACbpB,OAAA;MAAAiB,QAAA,eACEjB,OAAA,CAACJ,eAAe;QAACyB,WAAW,EAAED;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAD/BL,KAAK,CAACM,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACN,CAAC,GACFb,KAAK,CAACe,QAAQ,CAAC;EAAC;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlCIF,YAAY;EAAA,QAEIJ,cAAc,EAEjBH,QAAQ;AAAA;AAAAkC,EAAA,GAJrB3B,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}