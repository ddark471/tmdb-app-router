{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satoshi_khd\\\\Desktop\\\\tmdb-app-router\\\\src\\\\components\\\\pages\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { service } from \"../../../api/service\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Rating from \"../../Rating/Rating\";\nimport Image from \"../../Image/Image\";\nimport Genres from \"../../Genres/Genres\";\nimport PostersTemplate from \"../../PostersTemplate/PostersTemplate\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const [searchParams] = useSearchParams();\n  const [currPage, setCurrPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    service(`https://api.themoviedb.org/3/movie/popular?language=${t(\"api-code\")}&page=${currPage}`, \"GET\").then(elem => {\n      setMoviesData(elem.data.results);\n      setTotalPages(elem.data.total_pages);\n    });\n    navigate(`/?page=${currPage}`, {\n      replace: true\n    });\n  }, [i18n.language, currPage, navigate]);\n  const handleBackPage = () => {\n    if (currPage > 1) {\n      setCurrPage(currPage - 1);\n    }\n  };\n  const handleNextPage = () => {\n    if (currPage < totalPages) {\n      setCurrPage(currPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.moviesContainer,\n      children: moviesData.map(movies => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movies,\n        children: /*#__PURE__*/_jsxDEV(PostersTemplate, {\n          postersData: movies,\n          type: \"moviePosters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 27\n        }, this)\n      }, movies.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      handleBackPage: handleBackPage,\n      handleNextPage: handleNextPage,\n      currPage: currPage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(Movies, \"BUf5h1qGebMpr3PTp/U+HX52H20=\", false, function () {\n  return [useSearchParams, useTranslation, useNavigate];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","useSearchParams","service","Link","useTranslation","Rating","Image","Genres","PostersTemplate","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","moviesData","setMoviesData","searchParams","currPage","setCurrPage","totalPages","setTotalPages","t","i18n","navigate","then","elem","data","results","total_pages","replace","language","handleBackPage","handleNextPage","children","className","styles","moviesContainer","map","movies","postersData","type","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/satoshi_khd/Desktop/tmdb-app-router/src/components/pages/Movies/Movies.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { service } from \"../../../api/service\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Rating from \"../../Rating/Rating\"\nimport Image from \"../../Image/Image\";\nimport Genres from \"../../Genres/Genres\";\nimport PostersTemplate from \"../../PostersTemplate/PostersTemplate\";\nimport Pagination from \"../../Pagination/Pagination\";\n\nconst Movies = () => {\n    const [moviesData, setMoviesData] = useState([]);\n    const [searchParams] = useSearchParams();\n    const [currPage, setCurrPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const { t, i18n } = useTranslation();\n    const navigate = useNavigate();\n    \n\n    useEffect(() => {\n        service(`https://api.themoviedb.org/3/movie/popular?language=${t(\"api-code\")}&page=${currPage}`,\"GET\").then((elem) => {\n          setMoviesData(elem.data.results);\n          setTotalPages(elem.data.total_pages);\n        });\n        navigate(`/?page=${currPage}` ,{replace: true}) \n      }, [ i18n.language, currPage , navigate])\n\n      const handleBackPage = () => {\n        if (currPage > 1) {\n          setCurrPage(currPage - 1);}}\n\n      const handleNextPage = () => {\n        if (currPage < totalPages) {\n          setCurrPage(currPage + 1);}}\n\n      return (\n        <>\n          <div className={styles.moviesContainer}>\n              {moviesData.map((movies) => <div className={styles.movies} key={movies.id}>\n                          <PostersTemplate postersData={movies} type={\"moviePosters\"}/>\n                    </div>)}\n          </div>\n\n          <Pagination handleBackPage={handleBackPage} handleNextPage={handleNextPage} currPage={currPage} totalPages={totalPages}/>\n        </>\n    )\n}\n\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}